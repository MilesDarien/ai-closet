.font-11px{font-size:11px}.font-12px{font-size:12px}.font-13px{font-size:13px}.font-15px{font-size:15px}.font-16px{font-size:16px}.font-17px{font-size:17px}.font-20px{font-size:20px}.font-22px{font-size:22px}.font-26px{font-size:26px}.font-28px,.top-nav a{font-size:28px}#slide-nav ul li:nth-child(4),.font-30px{font-size:30px}.font-34px,.top-nav ul li:nth-child(2),.top-nav ul li:nth-child(4),.top-nav ul li:nth-child(6){font-size:34px}#slide-nav ul li:nth-child(3),.font-40px{font-size:40px}#slide-nav .top-nav ul li:nth-child(4),#slide-nav .top-nav ul li:nth-child(6),#slide-nav ul li:nth-child(2),.font-50px,.top-nav #slide-nav ul li:nth-child(4),.top-nav #slide-nav ul li:nth-child(6){font-size:50px}#slide-nav ul li:first-child,.font-60px{font-size:60px}

/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}.top-nav{width:95%;margin:auto}.top-nav ul{padding:0;list-style:none;margin:5px 1em 1em;display:-webkit-box;display:flex;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row;justify-content:space-around}.top-nav ul li{padding:8px 30px}.top-nav ul li:nth-child(2),.top-nav ul li:nth-child(4),.top-nav ul li:nth-child(6){font-weight:100}.top-nav a{padding:0;list-style:none;text-decoration:none;color:#000;margin:5px 0 0}.top-nav a:hover{-webkit-transition:.3s;transition:.3s;border-radius:25px;background:#000}.top-nav a:hover a{opacity:1%}.top-nav a:hover li{color:#fff}main{width:80%;height:80%;margin:auto}main,main .items{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}main .items{height:100px;width:100%;border:1px solid #999}#slide-nav{width:100vw;height:100%;display:-webkit-box;display:flex;-webkit-box-pack:center;justify-content:center;-webkit-box-align:center;align-items:center;font-weight:700}#slide-nav a{text-decoration:none}#slide-nav ul{margin:0;padding:0;list-style:none;display:block}#slide-nav ul li{margin:40px 0}#slide-nav ul li:first-child a{margin-left:1em;color:#000}#slide-nav .top-nav ul li:nth-child(4) a,#slide-nav .top-nav ul li:nth-child(6) a,#slide-nav ul li:nth-child(2) a,.top-nav #slide-nav ul li:nth-child(4) a,.top-nav #slide-nav ul li:nth-child(6) a{margin-left:.8em;color:grey}#slide-nav ul li:nth-child(3) a{margin-left:.5em;color:#999}#slide-nav ul li:nth-child(4) a{color:#e6e6e6}html{font-family:SF Pro Display,Satisfy,SF Pro Text;box-sizing:border-box}body{height:100vh;width:100%;overflow:hidden}button{font-family:SF Pro Display;font-weight:700;height:55px;width:120px;border:none;font-size:34px}header{display:-webkit-box;display:flex;margin:0 1em;-webkit-box-align:center;align-items:center;-webkit-box-pack:justify;justify-content:space-between}.logo-main{font-family:Satisfy;height:-webkit-max-content;height:-moz-max-content;height:max-content;font-size:60px;margin:.5em}.btn-secondary{background-color:transparent;color:#000;border:none}.btn-secondary:hover{-webkit-transition:.3s;transition:.3s;color:#999}#main{height:100%}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
